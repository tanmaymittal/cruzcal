openapi: 3.0.3
info:
  description: CruzCal lets users select their Class and produce calendar files based
    on the class events they can import to their preferred calendar.
  version: 0.1.0
  title: CruzCal
servers:
- url: http://localhost:3010/
paths:
  "/api/version/latest":
    get:
      description: Check latest API version
      responses:
        200:
          description: Latest API version
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/auth/check":
    get:
      description: Check if a client is authenticated
      responses:
        200:
          description: User is authenticated
        401:
          description: User is not authenticated
  "/api/auth/google/calendar":
    get:
      description: Authenticate Google Calendar submission
      responses: 
        '302':
          description: Redirecting to Google authorization server
  "/api/auth/google/calendar/redirect":
    get:
      description: Handle redirect from Google Authentication
      parameters:
        - in: query
          description: Random state string to protect against attacks such as CSRF.
          required: true
          name: state
          allowReserved: true
          schema:
            type: string
        - in: query
          description: Launches a Basic authorization code flow, requiring a POST to the token endpoint to obtain the tokens.
          required: true
          name: code
          allowReserved: true
          schema:
            type: string
        - in: query
          description: Scopes for authenticated user
          required: true
          allowReserved: true
          name: scope
          schema:
            type: array
        - in: query
          description: Index of which user is selected.
          name: authuser
          schema:
            type: string
        - in: query
          description: Organization associated with google account.
          name: hd
          schema:
            type: string
        - in: query
          description: Indicates if user should be prompted for consent on every access.
          name: prompt
          schema:
            type: string
      responses:
        '302':
          description: Successful authorization. Redirecting to landing page
        default:
          description: Authorization failed.
  "/api/auth/google":
    get:
      description: Authorize and authenticate user
      responses: 
        '302':
          description: Redirecting to Google authorization server
  "/api/auth/google/redirect":
    get:
      description: Handle redirect from Google authorization of user
      parameters:
        - in: query
          description: Random state string to protect against attacks such as CSRF.
          required: true
          name: state
          allowReserved: true
          schema:
            type: string
        - in: query
          description: Launches a Basic authorization code flow, requiring a POST to the token endpoint to obtain the tokens.
          required: true
          name: code
          allowReserved: true
          schema:
            type: string
        - in: query
          description: Scopes for authenticated user
          required: true
          allowReserved: true
          name: scope
          schema:
            type: array
        - in: query
          description: Index of which user is selected.
          name: authuser
          schema:
            type: string
        - in: query
          description: Organization associated with google account.
          name: hd
          schema:
            type: string
        - in: query
          description: Indicates if user should be prompted for consent on every access.
          name: prompt
          schema:
            type: string
      responses:
        '302':
          description: Successful authorization. Redirecting to landing page
        default:
          description: Authorization failed.
  "/api/user":
    get:
      description: Return json representation of public user information
      security:
        - GoogleAuth:
          - https://www.googleapis.com/auth/userinfo.email
          - https://www.googleapis.com/auth/userinfo.profile
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
  "/api/logout":
    post:
      description: Logout authenticated user
      responses:
        '302':
          description: Successful logout. Redirecting to landing page.
  "/api/terms":
    get:
      description: Return information for all available terms
      responses:
        '200':
          description: Successfully returned all available terms.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TermInfo"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/subjects":
    get:
      description: Get available subjects
      parameters:
      - description: Optional query parameter to filter by a term
        in: query
        name: term
        schema:
          "$ref": "#/components/schemas/TermCode"
      responses:
        '200':
          description: Successfully returned subjects
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Subject"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/courses":
    get:
      description: Get available courses
      parameters:
      - description: Required query parameter to filter by a term
        required: true
        in: query
        name: term
        schema:
          "$ref": "#/components/schemas/TermCode"
      - description: Required query parameter to filter by a subject
        required: true
        in: query
        name: subject
        schema:
          "$ref": "#/components/schemas/Subject"
      responses:
        '200':
          description: Successfully returned courses
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CourseInfo"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/schedule/{type}":
    post:
      description: Generate calendar schedule URI
      parameters:
        - in: path
          name: type
          required: true
          schema:
            "$ref": "#/components/schemas/CalendarType"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": '#/components/schemas/CalendarRequest'
      responses:
        '201':
          description: Successfully returned courses
          content:
            application/json:
              schema:
                "$ref": '#/components/schemas/CalendarResource'
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/calendar/json":
    get:
      description: Generate location and schedule information for given courses
      parameters:
        - in: query
          name: termCode
          required: true
          schema:
            "$ref": "#/components/schemas/TermCode"
        - in: query
          name: courseIDs
          required: true
          schema:
            type: array
            minItems: 1
            items:
              type: string
      responses:
        '200':
          description: Successfully returned location and schedule information.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JSONCalendar"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/calendar/ics":
    get:
      description: Generate calendar file (.ics) for given courses
      parameters:
        - in: query
          name: termCode
          required: true
          schema:
            "$ref": "#/components/schemas/TermCode"
        - in: query
          name: courseIDs
          required: true
          schema:
            type: array
            minItems: 1
            items:
              type: string
      responses:
        '200':
          description: Successfully returned location and schedule information.
          content:
            text/calendar:
              schema:
                "$ref": "#/components/schemas/BinaryFile"
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/calendar/google":
    get:
      description: Generate location and schedule information for given courses
      parameters:
        - in: query
          name: termCode
          required: true
          schema:
            "$ref": "#/components/schemas/TermCode"
        - in: query
          name: courseIDs
          required: true
          schema:
            type: array
            minItems: 1
            items:
              type: string
      responses:
        '200':
          description: Successfully returned location and schedule information.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/loading":
    get:
      description: Temporary loading page during redirects
      responses:
        '200':
          description: Successful redirect
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Error Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"


security:
  - GoogleAuth: []

components:
  securitySchemes:
    GoogleAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: "https://accounts.google.com/o/oauth2/v2/auth"
          tokenUrl: "https://www.googleapis.com/oauth2/v4/token"
          scopes:
            https://www.googleapis.com/auth/userinfo.email: The email associated with your google account
            https://www.googleapis.com/auth/userinfo.profile: Public profile information for your google account
            https://www.googleapis.com/auth/calendar: Read, edit, delete permissions for Google Calendar
  schemas:
    User:
      type: object
      additionalProperties: true
      required:
        - displayName
      properties:
        displayName:
          type: string
        email:
          type: string
          format: email
    CourseIdentifier:
      type: object
      additionalProperties: false
      required:
      - courseID
      properties:
        courseID:
          type: string
      example:
        courseID: '50444'
    Date:
      type: string
      format: date
    Time:
      type: string
      pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    TimeRange:
      type: object
      additionalProperties: false
      required:
        - start
        - end
      properties:
        start:
          "$ref": "#/components/schemas/Time"
        end:
          "$ref": "#/components/schemas/Time"
    TermCode:
      type: number
      example: 2222
    Subject:
      type: string
      example: CSE
    TermInfo:
      type: object
      additionalProperties: false
      required:
        - code
        - name
        - date
      properties:
        code:
          "$ref": "#/components/schemas/TermCode"
        name:
          type: string
        date:
          type: object
          additionalProperties: false
          required:
            - start
            - end
          properties:
            start:
              "$ref": "#/components/schemas/Date"
            end:
              "$ref": "#/components/schemas/Date"
    Weekday:
      type: string
      enum:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
    WeeklyMeeting:
      type: object
      nullable: true
      additionalProperties: false
      required:
      - days
      - time
      properties:
        days:
          type: array
          items:
            "$ref": "#/components/schemas/Weekday"
        time:
          "$ref": "#/components/schemas/TimeRange"
    LectureInfo:
      type: object
      additionalProperties: false
      required:
      - location
      - recurrence
      properties:
        location:
          type: string
        recurrence:
          "$ref": "#/components/schemas/WeeklyMeeting"
    CourseInfo:
      type: object
      additionalProperties: false
      required:
        - name
        - coursenum
        - section
        - subject
        - courseID
        - lectures
        - professor
      properties:
        name:
          type: string
        professor:
          type: array
          items:
            type: string
        subject:
          type: string
        coursenum:
          type: string
        section:
          type: string
        courseID:
          type: number
        lectures:
          type: array
          items:
            "$ref": "#/components/schemas/LectureInfo"
    CalendarType:
      enum: [json, ics, google, cruzcal]
    CalendarRequest:
      type: object
      additionalProperties: false
      required:
        - termCode
        - courseIDs
      properties:
        termCode:
          "$ref": "#/components/schemas/TermCode"
        courseIDs:
          type: array
          items:
            type: string
    JSONCalendar:
      type: object
      additionalProperties: false
      required:
        - term
        - courses
      properties:
        term:
          "$ref": "#/components/schemas/TermInfo"
        courses:
          type: array
          items:
            "$ref": "#/components/schemas/CourseInfo"
    CalendarResource:
      type: object
      additionalProperties: false
      required:
        - uri
        - term
        - courses
      properties:
        uri:
          type: string
        term:
          "$ref": "#/components/schemas/TermInfo"
        courses:
          type: array
          items:
            "$ref": "#/components/schemas/CourseInfo"
    BinaryFile:
      type: string
      format: binary
    Error:
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
